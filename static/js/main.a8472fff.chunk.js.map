{"version":3,"sources":["context/RoutesProvider.js","context/UserLocationProvider.js","components/leafletmap/IconLocation.js","pages/FormSolicitudReciclaje.js","components/leafletmap/Markers.js","pages/Mapa.js","components/layout/Header.js","App.js","reportWebVitals.js","index.js"],"names":["RoutesContext","React","createContext","RoutesProvider","props","points","OvaloLaFamilia","name","lat","lng","this","ViveroNuevoChimbote","useState","loading","stateCollectionPoints","setStateCollectionPoints","distancia","ruta","rutaFormateada","stateOptimalRoute","setStateOptimalRoute","stateOK","setStateOK","getCollectionPoints","a","fetch","method","headers","response","json","data","message","console","log","removeCollectionPoints","runExample","getOptimalRoute","map","item","latitud","longitud","setTimeout","Provider","value","children","UserLocationContext","UserLocationProvider","username","stateUserlocation","setStateUserLocation","stateUserOK","setStateUserOK","createUserLocation","nombre","newPunto","body","JSON","stringify","status","getUserLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","enableHighAccuracy","maximumAge","alert","IconLocation","url","Icon","iconUrl","iconSize","FormSolicitudReciclaje","useContext","className","autoComplete","onSubmit","e","preventDefault","target","exp","trim","test","htmlFor","type","id","onChange","onClick","readOnly","MapContainer","center","latlng","zoom","TileLayer","attribution","Marker","icon","eventHandlers","click","draggable","Popup","Tooltip","direction","offset","opacity","permanent","Markers","location","info","Mapa","useEffect","scrollWheelZoom","index","Polyline","pathOptions","color","positions","Header","document","querySelector","classList","toggle","to","activeClassName","exact","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a8472fff.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const RoutesContext = React.createContext()\r\n\r\nconst RoutesProvider = (props) => {\r\n\r\n  const points = {\r\n    OvaloLaFamilia: {\r\n      name: \"Ovalo la Familia\",\r\n      lat: -9.1282037,\r\n      lng: -78.517,\r\n      get latlng(){ return [this.lat, this.lng] }\r\n    },\r\n    ViveroNuevoChimbote: {\r\n      name: \"Vivero de Nuevo Chimbote\",\r\n      lat: -9.1291256,\r\n      lng: -78.5121042,\r\n      get latlng(){ return [this.lat, this.lng] }\r\n    }\r\n  } // puntos de referencia principales\r\n\r\n  const [stateCollectionPoints, setStateCollectionPoints] = React.useState({\r\n    points: [],\r\n    loading: false\r\n  })\r\n\r\n  const [stateOptimalRoute, setStateOptimalRoute] = React.useState({\r\n    distancia: 0,\r\n    ruta: [],\r\n    rutaFormateada: [],\r\n    loading: false\r\n  })\r\n\r\n  const [stateOK, setStateOK] = React.useState(false)\r\n\r\n  const showAlertOk = () => {\r\n    setStateOK(true)\r\n    setTimeout(() => setStateOK(false), 4000);\r\n  }\r\n\r\n  const createCollectionPoint = async (nombre, lat, lng) => {\r\n    try {\r\n      var newPunto = {\r\n        \"nombre\": nombre,\r\n        \"latitud\": lat,\r\n        \"longitud\": lng\r\n      }\r\n      const response = await fetch('https://viajerotsp.herokuapp.com/punto', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(newPunto)\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const getCollectionPoints = async () => {\r\n    try {\r\n      setStateCollectionPoints({\r\n        ...stateCollectionPoints,\r\n        loading: true\r\n      })\r\n      const response = await fetch('https://viajerotsp.herokuapp.com/puntos', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if (data.message !== \"No existe puntos registrados\") {\r\n        setStateCollectionPoints({\r\n          points: data,\r\n          loading: false\r\n        })\r\n      } else {\r\n        setStateCollectionPoints({\r\n          ...stateCollectionPoints,\r\n          loading: false\r\n        })\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const removeCollectionPoints = async () => {\r\n    try {\r\n      const response = await fetch('https://viajerotsp.herokuapp.com/eliminar/todo', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      setStateCollectionPoints({\r\n        points: [],\r\n        loading: false\r\n      })\r\n      setStateOptimalRoute({\r\n        distancia: 0,\r\n        ruta: [],\r\n        rutaFormateada: [],\r\n        loading: false\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const runExample = async () => {\r\n    try {\r\n      setStateCollectionPoints({\r\n        ...stateCollectionPoints,\r\n        loading: true\r\n      })\r\n      const response = await fetch('https://viajerotsp.herokuapp.com/poblar-puntos', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const getOptimalRoute = async () => {\r\n    try {\r\n      setStateOptimalRoute({ ...stateOptimalRoute, loading: true })\r\n      const response = await fetch('https://viajerotsp.herokuapp.com/ruta', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      const rutaFormateada = data.ruta.map((item) => {\r\n        return [item.latitud, item.longitud]\r\n      })\r\n      setStateOptimalRoute({\r\n        distancia: data.distancia,\r\n        ruta: data.ruta,\r\n        rutaFormateada: rutaFormateada,\r\n        loading: false\r\n      })\r\n      showAlertOk()\r\n    } catch (error) {\r\n      setStateOptimalRoute({\r\n        ...stateOptimalRoute,\r\n        loading: false\r\n      })\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /* ejemplos de demostracion */\r\n  // const createExample1 = () => {\r\n  //   createCollectionPoint(points.ViveroNuevoChimbote.name, points.ViveroNuevoChimbote.lat, points.ViveroNuevoChimbote.lng)\r\n  //   createCollectionPoint(\"Vivero de Nuevo Chimbote\", -9.1291256, -78.5121042)\r\n  //   createCollectionPoint(\"Felix\", -9.136431071364676, -78.51728512227766)\r\n  //   createCollectionPoint(\"Chaufa Talico\", -9.1294528147166, -78.51683476078561)\r\n  //   createCollectionPoint(\"Gino Ascencio\", -9.12104925874468, -78.51622301047843)\r\n  //   createCollectionPoint(\"Angel\", -9.123907515727065, -78.53695434223293)\r\n  //   createCollectionPoint(\"Jordan\", -9.120472086100033, -78.54145720714085)\r\n  //   createCollectionPoint(\"Patrick\", -9.120875805901418, -78.53130984640943)\r\n  //   createCollectionPoint(\"Juan\", -9.126542914577833, -78.52909564202912)\r\n  //   createCollectionPoint(\"Lupe Flores\", -9.12744634385097, -78.51132850008365)\r\n  //   createCollectionPoint(\"Rosa\", -9.133221718400645, -78.50820097548838)\r\n  //   createCollectionPoint(\"Restauran Gonzalito\", -9.140053393612543, -78.50245802599576)\r\n  //   createCollectionPoint(\"Pedro\", -9.145431915493127, -78.50641923958972)\r\n  //   createCollectionPoint(\"Foto Felix\", -9.115997867739274, -78.54011943497542)\r\n  //   createCollectionPoint(\"Marisol\", -9.113962210824935, -78.5379981822419)\r\n  //   createCollectionPoint(\"Panaderia Don Pedrito\", -9.119905179218225, -78.5279401654431 )\r\n  //   createCollectionPoint(\"Gonzalo\", -9.12302695324693, -78.51937298319774)\r\n  //   createCollectionPoint(\"Sebastian\", -9.120869018093508, -78.52185774200451)\r\n  //   createCollectionPoint(\"Cevicheria Pescadito\", -9.124005594635882, -78.5293550111817)\r\n  //   createCollectionPoint(\"Teodoro\", -9.12342842693463, -78.53014084257758)\r\n  //   createCollectionPoint(\"Yessenia Cubas\", -9.123731267830845, -78.52818824599588)\r\n  //   createCollectionPoint(\"Ximena\", -9.127151046290708, -78.53122342184238)\r\n  //   createCollectionPoint(\"Mario\", -9.126323158489592, -78.53212992222092)\r\n  //   createCollectionPoint(\"Paula\", -9.123133069733688, -78.53270785871882)\r\n  //   createCollectionPoint(\"Milena\", -9.139887987296426, -78.50152852625817)\r\n  //   createCollectionPoint(\"Carlos\", -9.137870102325, -78.50822666107541)\r\n  //   createCollectionPoint(\"Julio\", -9.136839856383366, -78.51263971724777)\r\n  //   createCollectionPoint(\"Jaime Miranda\", -9.134906142426487, -78.51794646983411)\r\n  //   createCollectionPoint(\"Cesar Adolfo\", -9.137053599520211, -78.52139791741868)\r\n  //   createCollectionPoint(\"Pool Velasquez\", -9.134545135954616, -78.52228724847704)\r\n  //   createCollectionPoint(\"Andy Rosales\", -9.134446563860122, -78.52369231269725)\r\n  //   createCollectionPoint(\"Guillermo\", -9.133348378106705, -78.52468613346109)\r\n  // }\r\n\r\n  return (\r\n    <RoutesContext.Provider value={{ stateOK, points, getCollectionPoints, stateCollectionPoints, getOptimalRoute, stateOptimalRoute, removeCollectionPoints, runExample}}>\r\n      {props.children}\r\n    </RoutesContext.Provider>\r\n  )\r\n}\r\n\r\nexport default RoutesProvider\r\n","import React from 'react'\r\nexport const UserLocationContext = React.createContext()\r\n\r\nconst UserLocationProvider = (props) => {\r\n\r\n  const [stateUserlocation, setStateUserLocation] = React.useState({\r\n    username: \"Punto actual\",\r\n    lat: -9.1282037,\r\n    lng: -78.517,\r\n    get latlng() {\r\n      return [this.lat, this.lng]\r\n    },\r\n    loading: false\r\n  })\r\n\r\n  const [stateUserOK, setStateUserOK] = React.useState(false)\r\n\r\n  const showAlertOk = () => {\r\n    setStateUserOK(true)\r\n    setTimeout(() => setStateUserOK(false), 4000);\r\n  }\r\n\r\n  const getUserLocation = () => {\r\n    if (!navigator.geolocation) {\r\n      alert(\"Tecnología de localización no soportada por su navegador\")\r\n    } else {\r\n      navigator.geolocation.getCurrentPosition(\r\n        function (position) {\r\n          var lat = position.coords.latitude;\r\n          var lng = position.coords.longitude;\r\n          setStateUserLocation({\r\n            ...stateUserlocation,\r\n            lat: lat,\r\n            lng: lng\r\n          })\r\n        },\r\n        function (error) {\r\n          console.log(error);\r\n        },\r\n        {\r\n          enableHighAccuracy: true,\r\n          maximumAge: 0,\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  const createUserLocation = async (nombre, lat, lng) => {\r\n    try {\r\n      setStateUserLocation({ ...stateUserlocation, loading: true })\r\n      var newPunto = {\r\n        \"nombre\": nombre,\r\n        \"latitud\": lat,\r\n        \"longitud\": lng\r\n      }\r\n      const response = await fetch('https://viajerotsp.herokuapp.com/punto', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(newPunto)\r\n      })\r\n      setStateUserLocation({\r\n        ...stateUserlocation,\r\n        username: nombre,\r\n        lat: lat,\r\n        lng: lng,\r\n        loading: false\r\n      })\r\n      if (response.status !== 500) {\r\n        showAlertOk()\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error\")\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <UserLocationContext.Provider value={{ stateUserOK, stateUserlocation, setStateUserLocation, getUserLocation, createUserLocation}}>\r\n      {props.children}\r\n    </UserLocationContext.Provider>\r\n  )\r\n}\r\n\r\nexport default UserLocationProvider\r\n","import { Icon } from \"leaflet\";\r\n\r\nconst IconLocation = (url) => {\r\n  return new Icon({\r\n    iconUrl: url,\r\n    iconSize: [35, 35]\r\n  });\r\n}\r\n\r\nexport default IconLocation\r\n\r\n\r\n\r\n// export const IconLocation = new Icon({\r\n//   iconUrl: \"./icons/marker_alert.svg\",\r\n//   iconSize: [35, 35]\r\n// });","import React from 'react'\r\nimport { RoutesContext } from '../context/RoutesProvider'\r\nimport { UserLocationContext } from '../context/UserLocationProvider'\r\nimport { MapContainer, TileLayer, Marker, Popup, Tooltip  } from 'react-leaflet'\r\nimport IconLocation from '../components/leafletmap/IconLocation'\r\n\r\nconst FormSolicitudReciclaje = () => {\r\n  const { points } = React.useContext(RoutesContext)\r\n  const { stateUserOK, stateUserlocation, setStateUserLocation, getUserLocation, createUserLocation } = React.useContext(UserLocationContext)\r\n\r\n  const procesarDatos = e => {\r\n    e.preventDefault()\r\n    let username = e.target.username.value\r\n    let exp = /^(-?\\d+\\.)?-?\\d+$/\r\n    if (!username.trim()) {\r\n      alert(\"Ingrese su nombre correctamente !!\")\r\n      return\r\n    }\r\n    if (!exp.test(stateUserlocation.lat) || !exp.test(stateUserlocation.lng)) {\r\n      alert(\"Ingrese su ubicación correctamente !!\")\r\n      return\r\n    }\r\n    createUserLocation(username, stateUserlocation.lat, stateUserlocation.lng)\r\n  }\r\n\r\n  const obtenerUbicacion = () => {\r\n    getUserLocation()\r\n  }\r\n\r\n  return (\r\n    <main className=\"wrapper\">\r\n      <h1>Nuevo punto de recolección</h1>\r\n      <p className=\"subtitle\">Formulario para crear un nuevo punto de recolección de reciclaje</p>\r\n      <form className=\"form\" autoComplete=\"off\" onSubmit={procesarDatos}>\r\n        <label htmlFor=\"name\">Nombre:</label>\r\n        <input type=\"text\" id=\"username\" value={stateUserlocation.username} onChange={(e) => setStateUserLocation({ ...stateUserlocation, username: e.target.value })} />\r\n        <div className=\"form-column\">\r\n          <p>Ubicación</p>\r\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={() => obtenerUbicacion()}>Obtener ubicación</button>\r\n        </div>\r\n        <label htmlFor=\"lat\">Lat: </label>\r\n        <input type=\"text\" id=\"lat\" value={stateUserlocation.lat} onChange={(e) => setStateUserLocation({ ...stateUserlocation, lat: e.target.value })} className=\"readonly\" readOnly/>\r\n        <label htmlFor=\"lng\">Lng: </label>\r\n        <input type=\"text\" id=\"lng\" value={stateUserlocation.lng} onChange={(e) => setStateUserLocation({ ...stateUserlocation, lng: e.target.value })} className=\"readonly\" readOnly/>\r\n        <p>Mapa</p>\r\n        <div className=\"map-default\">\r\n          <MapContainer\r\n            center={points.OvaloLaFamilia.latlng}\r\n            zoom={13}\r\n          >\r\n            <TileLayer\r\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            {\r\n              (stateUserlocation.lat && stateUserlocation.lng) && (\r\n                <Marker\r\n                  position={[stateUserlocation.lat, stateUserlocation.lng]}\r\n                  icon={IconLocation('./icons/marker.svg')}\r\n                  eventHandlers={{\r\n                    click: (e) => {\r\n                      setStateUserLocation({ ...stateUserlocation, lat: e.latlng.lat, lng: e.latlng.lng})\r\n                    },\r\n                  }}\r\n                  draggable={true}\r\n                  className=\"marker\"\r\n                >\r\n                  <Popup>\r\n                    <p>{stateUserlocation.username}</p>\r\n                  </Popup>\r\n                  <Tooltip direction=\"bottom\" offset={[0, 18]} opacity={1} permanent className=\"marker-tooltip\">{stateUserlocation.username}</Tooltip>\r\n                </Marker>\r\n              )\r\n            }\r\n          </MapContainer>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Crear punto</button>\r\n      </form>\r\n      <div className=\"alerts-container\">\r\n        {\r\n          stateUserlocation.loading && (\r\n            <div className=\"alert\">\r\n              <p><i className=\"fas fa-spinner\"></i> Creando nuevo punto</p>\r\n            </div>\r\n          )\r\n        }\r\n        {\r\n          stateUserOK && (\r\n            <div className=\"alert alert-ok\">\r\n              <p><i className=\"far fa-check-circle\"></i> Creación correcta !!</p>\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default FormSolicitudReciclaje","import React from 'react'\r\nimport { Marker, Popup, Tooltip } from 'react-leaflet'\r\n\r\nconst Markers = (props) => {\r\n  return (\r\n    <Marker\r\n      position={props.location}\r\n      icon={props.icon}\r\n      draggable={false}\r\n      className=\"marker\"\r\n    >\r\n      <Popup>\r\n        <p>{props.info}</p>\r\n        {/* <img className=\"foto\" src={props.img} alt=\"foto\"/> */}\r\n      </Popup>\r\n      <Tooltip direction=\"bottom\" offset={[0, 18]} opacity={1} permanent className=\"marker-tooltip\">{props.info}</Tooltip>\r\n    </Marker>\r\n  )\r\n}\r\n\r\nexport default Markers\r\n","import React from 'react'\r\nimport { MapContainer, TileLayer, Polyline } from 'react-leaflet'\r\nimport Markers from '../components/leafletmap/Markers'\r\nimport IconLocation from '../components/leafletmap/IconLocation'\r\nimport 'leaflet/dist/leaflet.css'\r\n\r\nimport { RoutesContext } from '../context/RoutesProvider'\r\n\r\nconst Mapa = () => {\r\n  const { stateOK, points, getCollectionPoints, stateCollectionPoints, getOptimalRoute, stateOptimalRoute, removeCollectionPoints, runExample } = React.useContext(RoutesContext)\r\n\r\n  const limeOptions = { color: '#ec3131' }\r\n\r\n  React.useEffect(() => {\r\n    getCollectionPoints()\r\n    getOptimalRoute()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const eliminarTodosPuntos = ()  => {\r\n    removeCollectionPoints()\r\n  }\r\n\r\n  const ejecutarEjemplo = () => {\r\n    runExample()\r\n  }\r\n\r\n  return (\r\n    <main className=\"mapview-fullscreen\">\r\n      <MapContainer\r\n        center={points.ViveroNuevoChimbote.latlng}\r\n        zoom={15}\r\n        scrollWheelZoom={false}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {\r\n          stateCollectionPoints.points.map((item, index) => (\r\n            <Markers\r\n              key={index}\r\n              location={[item.latitud, item.longitud]}\r\n              info={item.nombre}\r\n              icon={IconLocation('./icons/marker.svg')}\r\n            />\r\n          ))\r\n        }\r\n        <Polyline pathOptions={limeOptions} positions={stateOptimalRoute.rutaFormateada} />\r\n      </MapContainer>\r\n      <div className=\"alerts-container\">\r\n        {\r\n          stateOptimalRoute.loading && (\r\n            <div className=\"alert\">\r\n              <p><i className=\"fas fa-spinner\"></i> Cargando ruta optima</p>\r\n            </div>\r\n          )\r\n        }\r\n        {\r\n          stateCollectionPoints.loading && (\r\n            <div className=\"alert\">\r\n              <p><i className=\"fas fa-spinner\"></i> Cargando marcadores</p>\r\n            </div>\r\n          )\r\n        }\r\n        {\r\n          stateOK && (\r\n            <div className=\"alert alert-ok\">\r\n              <p><i className=\"far fa-check-circle\"></i> Listo Ruta optima</p>\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n      <div className=\"mapview-menu\">\r\n        <button onClick={() => eliminarTodosPuntos()} className=\"btn btn-secondary\">Eliminar todos los puntos</button>\r\n        <button onClick={() => ejecutarEjemplo()} className=\"btn btn-secondary\">Ejecutar ejemplo</button>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Mapa\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n\r\n  const activarMenu = (e) => {\r\n    const header_nav = document.querySelector('.header-nav')\r\n    header_nav.classList.toggle('header-nav-active');\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header-top\">\r\n        <h2>RECICLAFONO</h2>\r\n        <button onClick={(e) => activarMenu(e)} className=\"btn header-btn-menu\"><i className=\"fas fa-bars\"></i></button>\r\n      </div>\r\n      <nav className=\"header-nav\">\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/mapa\" className=\"header-option\" activeClassName=\"header-active\">\r\n              Ver mapa\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/\" exact className=\"header-option\" activeClassName=\"header-active\">\r\n              + Punto de Recolección\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport FormSolicitudReciclaje from './pages/FormSolicitudReciclaje'\nimport Mapa from './pages/Mapa'\nimport Header from './components/layout/Header'\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/mapa\">\n          <Header />\n          <Mapa />\n        </Route>\n        <Route path=\"/\">\n          <Header />\n          <FormSolicitudReciclaje />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport RoutesProvider from './context/RoutesProvider'\nimport UserLocationProvider from './context/UserLocationProvider'\n\nReactDOM.render(\n  <React.StrictMode>\n    <RoutesProvider>\n      <UserLocationProvider>\n        <App />\n      </UserLocationProvider>\n    </RoutesProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}